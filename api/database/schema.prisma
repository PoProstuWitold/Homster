// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  	provider = "prisma-client-js"
}

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

enum Role {
	USER
	DEVELOPER
	MOD
	ADMIN
}

model User {
	id          	String      @id @default(uuid())
	createdAt   	DateTime  	@default(now())
	updatedAt   	DateTime  	@updatedAt
	role			Role		@default(USER)
	email    		String		@unique
	displayName 	String		@unique
	password		String
	fullName		String
	games			Game[]
	employments 	StudioEmployee[]
}

enum GameStatus {
	NotReleased
	Alpha
	Beta
	EarlyAccess
	Released
}

enum GameType {
	Game
	DLC
}

model Tag {
	id    			Int    		@id 		@default(autoincrement())
	name  			String 		@unique
	createdAt   	DateTime  	@default(now())
	updatedAt   	DateTime  	@updatedAt
	games 			Game[]
}

model Genre {
	id    			Int    		@id 		@default(autoincrement())
	name  			String 		@unique
	createdAt   	DateTime  	@default(now())
	updatedAt   	DateTime  	@updatedAt
	games 			Game[]
}

model Game {
	id          	String      @id @default(uuid())
	createdAt   	DateTime  	@default(now())
	updatedAt   	DateTime  	@updatedAt
	name			String		
	description 	String
	basicPrice		Float		@default(0)
	price 			Float		@default(0)
	status			GameStatus	@default(Released)
	type			GameType	@default(Game)
	studios			GameStudio[]
	releasedAt		DateTime
	recentReviews 	Int			@default(0)
	allReviews		Int			@default(0)
	recentRating	Float		@default(0)
	allRating		Float		@default(0)
	tags  			Tag[]
	genres			Genre[]
	users			User[]
	adultOnly		Boolean		@default(false)
}

enum StudioType {
	Developer
	Publisher
	DeveloperAndPublisher
}

enum EmploymentType {
	Owner
	Manager
	Worker
}

model Studio {
	id          	String      @id @default(uuid())
	createdAt   	DateTime  	@default(now())
	updatedAt   	DateTime  	@updatedAt
	name			String		@unique
	type			StudioType	@default(DeveloperAndPublisher)
	games			GameStudio[]
	employees       StudioEmployee[]
}

model StudioEmployee {
	studio      	Studio      	@relation(fields: [studioId], references: [id], onDelete: Cascade)
	studioId    	String       
	employee      	User        	@relation(fields: [employeeId], references: [id], onDelete: Cascade)
	employeeId    	String
	employmentType	EmploymentType 	@default(Worker)       
	assignedAt 		DateTime 		@default(now())
	assignedBy 		String    

	@@id([studioId, employeeId])
}

model GameStudio {
	game 			Game 		@relation(fields: [gameId], references: [id], onDelete: Cascade)
	gameId 			String
	studio 			Studio 		@relation(fields: [studioId], references: [id], onDelete: Cascade)
	studioId 		String
	contribution	StudioType	@default(DeveloperAndPublisher)
	
	@@id([gameId, studioId])
}